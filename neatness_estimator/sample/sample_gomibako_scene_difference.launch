<launch>
  <arg name="filename" default="$(find neatness_estimator)/sample/gomibako.bag" />
  <arg name="options" value="--clock --loop" />
  <arg name="manager" value="camera_remote_nodelet_manager" />
  <arg name="respawn" value="false" />

  <param name="/use_sim_time" value="true" />

  <!-- play rosbag -->
  <node name="rosbag_play"
        pkg="rosbag" type="play"
        output="log"
        args="$(arg filename) $(arg options)" />

  <node name="$(arg manager)"
        pkg="nodelet" type="nodelet" 
        output="screen" args="manager" />

  <!-- expand compressed rgb image -->
  <node name="rgb_image_republish"
        pkg="image_transport" type="republish"
        output="screen" args="compressed raw">
    <remap from="in" to="/tablet/head_rgbd_sensor/rgb/image_rect_color" />
    <remap from="out" to="/remote/tablet/head_rgbd_sensor/rgb/image_rect_color" />
  </node>

  <!-- expand compressed depth image -->
  <node name="depth_image_republish"
        pkg="image_transport" type="republish"
        output="screen" args="compressedDepth raw">
    <remap from="in" to="/tablet/head_rgbd_sensor/depth_registered/image" />
    <remap from="out" to="/remote/tablet/head_rgbd_sensor/depth_registered/image" />
  </node>

  <!-- generate point cloud from rgb and depth image -->
  <arg name="bond" value="" if="$(arg respawn)"/>
  <arg name="bond" value="--no-bond" unless="$(arg respawn)"/>

  <node pkg="nodelet" type="nodelet" name="points_xyzrgb_hw_registered"
        args="load depth_image_proc/point_cloud_xyzrgb $(arg manager) $(arg bond)"
        respawn="$(arg respawn)">
    <remap from="rgb/image_rect_color"        to="/remote/tablet/head_rgbd_sensor/rgb/image_rect_color"/>
    <remap from="rgb/camera_info"             to="/tablet/head_rgbd_sensor/rgb/camera_info"/>
    <remap from="depth_registered/image_rect" to="/remote/tablet/head_rgbd_sensor/depth_registered/image"/>
    <remap from="depth_registered/points"     to="/remote/tablet/head_rgbd_sensor/depth_registered/points"/>
    <rosparam>
      queue_size: 100
    </rosparam>
  </node>

  <!-- gomibako mask publisher -->
  <node name="gomibako_mask_publisher"
        pkg="jsk_perception" type="image_publisher.py">
    <rosparam subst_value="true">
      file_name: $(find neatness_estimator)/sample/gomibako_mask.jpg
      encoding: mono8
      publish_info: false
    </rosparam>
  </node>

  <node name="mask_image_to_point_indices"
        pkg="nodelet" type="nodelet"
        args="standalone jsk_pcl_utils/MaskImageToPointIndices">
    <remap from="~input" to="/gomibako_mask_publisher/output"/>
    <rosparam>
      use_multi_channels: false
    </rosparam>
  </node>
  
  <node name="point_indices_to_cluster_point_indices"
        pkg="jsk_pcl_ros_utils" type="point_indices_to_cluster_point_indices">
    <remap from="~input" to="mask_image_to_point_indices/output" />
  </node>

  <node name="gomibako_cluster_point_indices_decomposer"
        pkg="nodelet" type="nodelet"
        args="standalone jsk_pcl/ClusterPointIndicesDecomposer">
    <remap from="~input" to="/remote/tablet/head_rgbd_sensor/depth_registered/points" />
    <remap from="~target" to="point_indices_to_cluster_point_indices/output" />
    <rosparam>
      align_boxes: false
      align_boxes_with_plane: false
      approximate_sync: true
      queue_size: 100
    </rosparam>
  </node> 

  <node name="apply_mask_image"
        pkg="nodelet" type="nodelet"
        args="standalone jsk_perception/ApplyMaskImage">
    <remap from="~input" to="/remote/tablet/head_rgbd_sensor/rgb/image_rect_color" />
    <remap from="~input/mask" to="/gomibako_mask_publisher/output" />
    <rosparam>
      approximate_sync: true
      clip: true
    </rosparam>
  </node>

  <node name="rviz"
        pkg="rviz" type="rviz"
        args="-d $(find neatness_estimator)/sample/gomibako.rviz">
  </node>

  <!-- distance estimator -->
  <include file="$(find neatness_estimator)/launch/distance_estimator_module_color_and_geometry.launch" >
    <arg name="prefix" value="$(env HOME)/.ros/gomibako" />
    <arg name="cloud_topic" value="/remote/tablet/head_rgbd_sensor/depth_registered/points" />
    <arg name="image_topic" value="/remote/tablet/head_rgbd_sensor/rgb/image_rect_color" />
    <arg name="cluster_topic" value="/point_indices_to_cluster_point_indices/output" />
  </include>

  <node name="sequence_difference_estimation_client"
        pkg="neatness_estimator" type="sequence_difference_estimation_client.py"
        output="screen">
    <rosparam subst_value="true">
      rate: 1
    </rosparam>
  </node>

</launch>
