<launch>
  <arg name="gpu" default="0"/>

  <arg name="input_image" default="/openni_camera/rgb/image_rect_color" />
  <arg name="input_cloud" default="/openni_camera/depth_registered/points" />
  <arg name="labels" default="mask_rcnn_labels.yaml" />

  <arg name="input_label" default="mask_rcnn_instance_segmentation/output/label_cls" />
  <arg name="input_labels" default="/mask_rcnn_instance_segmentation/output/labels" />
  <arg name="score_thresh" default="0.75"/>
  <arg name="eco_mode" default="false"/>
  <arg name="visualize" default="false" />
  <arg name="thresh" default="0.2" />
  <arg name="target_frame" default="base_link" />

  <node name="mask_rcnn_instance_segmentation"
        pkg="jsk_perception" type="mask_rcnn_instance_segmentation.py"
        clear_params="true">
    <remap from="~input" to="$(arg input_image)" />
    <rosparam command="load"
              file="$(find neatness_estimator)/models/$(arg labels)" />
    <rosparam subst_value="true">
      pretrained_model: $(find neatness_estimator)/trained_data/fcsc_instance_segmentation_191023.npz
      gpu: $(arg gpu)
    </rosparam>
  </node>

  <node name="instance_cluster_point_indices_decomposer"
        pkg="nodelet" type="nodelet"
        args="standalone jsk_pcl/ClusterPointIndicesDecomposer">
    <remap from="~input" to="$(arg input_cloud)" />
    <remap from="~target" to="/mask_rcnn_instance_segmentation/output/cluster_indices" />
    <rosparam subst_value="true">
      align_boxes: true
      align_boxes_with_plane: false
      approximate_sync: true
      queue_size: 100
      target_frame_id: $(arg target_frame)
      sort_by: input_indices
    </rosparam>
  </node>

</launch>
